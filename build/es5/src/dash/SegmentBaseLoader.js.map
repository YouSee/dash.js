{"version":3,"sources":["../../../../src/dash/SegmentBaseLoader.js"],"names":["SegmentBaseLoader","context","eventBus","getInstance","instance","logger","errHandler","boxParser","requestModifier","metricsModel","mediaPlayerModel","httpLoader","baseURLController","setup","getLogger","initialize","create","setConfig","config","checkSetConfigCall","hasOwnProperty","Error","loadInitialization","representation","loadingInfo","initRange","baseUrl","resolve","path","info","init","url","undefined","range","start","end","searching","bytesLoaded","bytesToLoad","debug","request","getFragmentRequest","onload","response","findInitRange","trigger","Events","INITIALIZATION_LOADED","onerror","load","success","error","loadSegments","type","callback","parts","toString","split","parseFloat","onLoaded","isoFile","sidx","hasRange","extraBytes","loadedLength","byteLength","parse","getBox","isComplete","offset","size","lastBox","getLastBox","ref","references","loadMultiSidx","segments","length","reference_type","j","len","ss","se","r","segs","count","tmpCallback","result","concat","referenced_size","getSegmentsForSidx","reset","abort","refs","timescale","time","earliest_presentation_time","first_offset","segment","duration","i","subsegment_duration","Segment","startTime","mediaRange","push","FragmentRequest","HTTPRequest","INIT_SEGMENT_TYPE","MEDIA_SEGMENT_TYPE","SEGMENTS_LOADED","mediaType","DashJSError","Errors","SEGMENT_BASE_LOADER_ERROR_CODE","SEGMENT_BASE_LOADER_ERROR_MESSAGE","__dashjs_factory_name","FactoryMaker","getSingletonFactory"],"mappings":"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","file":"SegmentBaseLoader.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport RequestModifier from '../streaming/utils/RequestModifier';\nimport Segment from './vo/Segment';\nimport DashJSError from '../streaming/vo/DashJSError';\nimport Events from '../core/events/Events';\nimport EventBus from '../core/EventBus';\nimport BoxParser from '../streaming/utils/BoxParser';\nimport FactoryMaker from '../core/FactoryMaker';\nimport Debug from '../core/Debug';\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest';\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\nimport HTTPLoader from '../streaming/net/HTTPLoader';\nimport Errors from '../core/errors/Errors';\n\nfunction SegmentBaseLoader() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        logger,\n        errHandler,\n        boxParser,\n        requestModifier,\n        metricsModel,\n        mediaPlayerModel,\n        httpLoader,\n        baseURLController;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function initialize() {\n        boxParser = BoxParser(context).getInstance();\n        requestModifier = RequestModifier(context).getInstance();\n        httpLoader = HTTPLoader(context).create({\n            errHandler: errHandler,\n            metricsModel: metricsModel,\n            mediaPlayerModel: mediaPlayerModel,\n            requestModifier: requestModifier\n        });\n    }\n\n    function setConfig(config) {\n        if (config.baseURLController) {\n            baseURLController = config.baseURLController;\n        }\n\n        if (config.metricsModel) {\n            metricsModel = config.metricsModel;\n        }\n\n        if (config.mediaPlayerModel) {\n            mediaPlayerModel = config.mediaPlayerModel;\n        }\n\n        if (config.errHandler) {\n            errHandler = config.errHandler;\n        }\n    }\n\n    function checkSetConfigCall() {\n        if (!baseURLController || !baseURLController.hasOwnProperty('resolve')) {\n            throw new Error('setConfig function has to be called previously');\n        }\n    }\n\n    function loadInitialization(representation, loadingInfo) {\n        checkSetConfigCall();\n        let initRange = null;\n        const baseUrl = baseURLController.resolve(representation.path);\n        const info = loadingInfo || {\n            init: true,\n            url: baseUrl ? baseUrl.url : undefined,\n            range: {\n                start: 0,\n                end: 1500\n            },\n            searching: false,\n            bytesLoaded: 0,\n            bytesToLoad: 1500\n        };\n\n        logger.debug('Start searching for initialization.');\n\n        const request = getFragmentRequest(info);\n\n        const onload = function (response) {\n            info.bytesLoaded = info.range.end;\n            initRange = boxParser.findInitRange(response);\n\n            if (initRange) {\n                representation.range = initRange;\n                // note that we don't explicitly set rep.initialization as this\n                // will be computed when all BaseURLs are resolved later\n                eventBus.trigger(Events.INITIALIZATION_LOADED, {representation: representation});\n            } else {\n                info.range.end = info.bytesLoaded + info.bytesToLoad;\n                loadInitialization(representation, info);\n            }\n\n        };\n\n        const onerror = function () {\n            eventBus.trigger(Events.INITIALIZATION_LOADED, {representation: representation});\n        };\n\n        httpLoader.load({request: request, success: onload, error: onerror});\n\n        logger.debug('Perform init search: ' + info.url);\n    }\n\n    function loadSegments(representation, type, range, loadingInfo, callback) {\n        checkSetConfigCall();\n        if (range && (range.start === undefined || range.end === undefined)) {\n            const parts = range ? range.toString().split('-') : null;\n            range = parts ? {start: parseFloat(parts[0]), end: parseFloat(parts[1])} : null;\n        }\n\n        callback = !callback ? onLoaded : callback;\n        let isoFile = null;\n        let sidx = null;\n        const hasRange = !!range;\n        const baseUrl = baseURLController.resolve(representation.path);\n        const info = {\n            init: false,\n            url: baseUrl ? baseUrl.url : undefined,\n            range: hasRange ? range : { start: 0, end: 1500 },\n            searching: !hasRange,\n            bytesLoaded: loadingInfo ? loadingInfo.bytesLoaded : 0,\n            bytesToLoad: 1500\n        };\n\n        const request = getFragmentRequest(info);\n\n        const onload = function (response) {\n            const extraBytes = info.bytesToLoad;\n            const loadedLength = response.byteLength;\n\n            info.bytesLoaded = info.range.end - info.range.start;\n            isoFile = boxParser.parse(response);\n            sidx = isoFile.getBox('sidx');\n\n            if (!sidx || !sidx.isComplete) {\n                if (sidx) {\n                    info.range.start = sidx.offset || info.range.start;\n                    info.range.end = info.range.start + (sidx.size || extraBytes);\n                } else if (loadedLength < info.bytesLoaded) {\n                    // if we have reached a search limit or if we have reached the end of the file we have to stop trying to find sidx\n                    callback(null, representation, type);\n                    return;\n                } else {\n                    const lastBox = isoFile.getLastBox();\n\n                    if (lastBox && lastBox.size) {\n                        info.range.start = lastBox.offset + lastBox.size;\n                        info.range.end = info.range.start + extraBytes;\n                    } else {\n                        info.range.end += extraBytes;\n                    }\n                }\n                loadSegments(representation, type, info.range, info, callback);\n            } else {\n                const ref = sidx.references;\n                let loadMultiSidx,\n                    segments;\n\n                if (ref !== null && ref !== undefined && ref.length > 0) {\n                    loadMultiSidx = (ref[0].reference_type === 1);\n                }\n\n                if (loadMultiSidx) {\n                    logger.debug('Initiate multiple SIDX load.');\n                    info.range.end = info.range.start + sidx.size;\n\n                    let j, len, ss, se, r;\n                    let segs = [];\n                    let count = 0;\n                    let offset = (sidx.offset || info.range.start) + sidx.size;\n                    const tmpCallback = function (result) {\n                        if (result) {\n                            segs = segs.concat(result);\n                            count++;\n\n                            if (count >= len) {\n                                callback(segs, representation, type);\n                            }\n                        } else {\n                            callback(null, representation, type);\n                        }\n                    };\n\n                    for (j = 0, len = ref.length; j < len; j++) {\n                        ss = offset;\n                        se = offset + ref[j].referenced_size - 1;\n                        offset = offset + ref[j].referenced_size;\n                        r = {start: ss, end: se};\n                        loadSegments(representation, null, r, info, tmpCallback);\n                    }\n\n                } else {\n                    logger.debug('Parsing segments from SIDX.');\n                    segments = getSegmentsForSidx(sidx, info);\n                    callback(segments, representation, type);\n                }\n            }\n        };\n\n        const onerror = function () {\n            callback(null, representation, type);\n        };\n\n        httpLoader.load({request: request, success: onload, error: onerror});\n        logger.debug('Perform SIDX load: ' + info.url);\n    }\n\n    function reset() {\n        httpLoader.abort();\n        httpLoader = null;\n        errHandler = null;\n        boxParser = null;\n        requestModifier = null;\n    }\n\n    function getSegmentsForSidx(sidx, info) {\n        const refs = sidx.references;\n        const len = refs.length;\n        const timescale = sidx.timescale;\n        let time = sidx.earliest_presentation_time;\n        let start = info.range.start + sidx.offset + sidx.first_offset + sidx.size;\n        const segments = [];\n        let segment,\n            end,\n            duration,\n            size;\n\n        for (let i = 0; i < len; i++) {\n            duration = refs[i].subsegment_duration;\n            size = refs[i].referenced_size;\n\n            segment = new Segment();\n            // note that we don't explicitly set segment.media as this will be\n            // computed when all BaseURLs are resolved later\n            segment.duration = duration;\n            segment.startTime = time;\n            segment.timescale = timescale;\n            end = start + size - 1;\n            segment.mediaRange = start + '-' + end;\n            segments.push(segment);\n            time += duration;\n            start += size;\n        }\n\n        return segments;\n    }\n\n    function getFragmentRequest(info) {\n        if (!info.url) {\n            return;\n        }\n\n        const request = new FragmentRequest();\n        request.type = info.init ? HTTPRequest.INIT_SEGMENT_TYPE : HTTPRequest.MEDIA_SEGMENT_TYPE;\n        request.url = info.url;\n        request.range = info.range.start + '-' + info.range.end;\n\n        return request;\n    }\n\n    function onLoaded(segments, representation, type) {\n        if (segments) {\n            eventBus.trigger(Events.SEGMENTS_LOADED, {segments: segments, representation: representation, mediaType: type});\n        } else {\n            eventBus.trigger(Events.SEGMENTS_LOADED, {segments: null, representation: representation, mediaType: type, error: new DashJSError(Errors.SEGMENT_BASE_LOADER_ERROR_CODE, Errors.SEGMENT_BASE_LOADER_ERROR_MESSAGE)});\n        }\n    }\n\n    instance = {\n        setConfig: setConfig,\n        initialize: initialize,\n        loadInitialization: loadInitialization,\n        loadSegments: loadSegments,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nSegmentBaseLoader.__dashjs_factory_name = 'SegmentBaseLoader';\nexport default FactoryMaker.getSingletonFactory(SegmentBaseLoader);\n"]}